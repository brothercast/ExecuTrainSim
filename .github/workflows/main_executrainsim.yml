name: Build and deploy Node.js app to Azure Web App - ExecuTrainSim

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: "ExecuTrainSimGroup"
  WEBAPP_NAME: "ExecuTrainSim"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      deploy_package_path: ${{ steps.prepare_deployment_package.outputs.deploy_package_path }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build frontend
        working-directory: ./executrainsim
        run: |
          echo "Installing frontend dependencies..."
          npm install
          echo "Building frontend..."
          npm run build

      - name: Build backend
        working-directory: ./execuTrainServer
        run: |
          echo "Installing backend dependencies..."
          npm install

      - name: Prepare deployment package
        id: prepare_deployment_package
        run: |
          echo "Creating deployment directory..."
          mkdir -p deploy
          echo "Creating public directory in deploy"
          mkdir -p deploy/public
          echo "Copying frontend build..."
          cp -r executrainsim/build/* deploy/public  # Serve frontend from 'public'
          echo "Copying backend files..."
          cp -r execuTrainServer/* deploy/
          echo "Copying startup script..."
          cp startup.sh deploy/
          echo "Copying package.json..."
          cp package.json deploy/
          echo "Setting startup script as executable..."
          chmod +x deploy/startup.sh
          echo "Creating deploy package path output"
          echo "deploy_package_path=$(pwd)/deploy" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined-app
          path: deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: combined-app
          path: .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B8E9E6374BA94AE1A8A5B9CD96351DF1 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BA8FAF1E10A042E4A2F42989602D18AB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_68A27ED84C3B49EEA196F0495783FD89 }}

      - name: Stop Web App
        run: |
          echo "Stopping WebApp..."
          az webapp stop --name ${{ env.WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
          sleep 30

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          slot-name: "Production"
          package: .

      - name: Start Web App
        run: |
          echo "Starting WebApp..."
          az webapp start --name ${{ env.WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
          sleep 30

      - name: Verify deployment
        run: |
          sleep 60
          for i in {1..3}; do
            STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.WEBAPP_NAME }}.azurewebsites.net/health)
            if [[ "$STATUS_CODE" -eq 200 ]]; then
                echo "Deployment verified successfully"
                exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done
          echo "Deployment verification failed after 3 attempts"
          exit 1