# azure-deploy.yml (Alternative - Set WEBSITE_NODE_DEFAULT_VERSION via Azure CLI - Workaround)
name: Deploy Node.js App to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install and Build
      run: |
        echo "Starting Install and Build process..."
        cd executrainsim
        npm ci
        npm run build
        cd ..
        cd executrainserver
        npm ci
        echo "Install and build process complete."
        cd ..

    - name: Prepare Deployment Package
      run: |
        echo "Creating deployment package..."
        rm -rf deployment-package
        mkdir deployment-package
        cp -r executrainserver/* deployment-package/
        mkdir deployment-package/executrainsim-build
        cp -r executrainsim/build/* deployment-package/executrainsim-build/
        cp startup.sh deployment-package/
        echo "Deployment package created."
        ls -l deployment-package

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ExecuTrainSim'
        slot-name: 'production'
        package: deployment-package

    - name: Set WEBSITE_NODE_DEFAULT_VERSION App Setting via Azure CLI # Workaround using Azure CLI
      run: |
        echo "Setting WEBSITE_NODE_DEFAULT_VERSION App Setting using Azure CLI..."
        az webapp config appsettings set --resource-group ExecuTrainSimGroup --name ExecuTrainSim --settings WEBSITE_NODE_DEFAULT_VERSION="~20"
        echo "WEBSITE_NODE_DEFAULT_VERSION App Setting set via Azure CLI."