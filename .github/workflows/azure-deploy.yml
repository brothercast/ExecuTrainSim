name: Build and deploy Node.js app to Azure Web App - ExecuTrainSim  
  
on:  
  push:  
    branches:  
      - main  
  workflow_dispatch:  
  
env:  
  AZURE_RESOURCE_GROUP: 'ExecuTrainSimGroup'  
  
jobs:  
  build_frontend:  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v4  
      - name: Set up Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.x'  
          cache: 'npm'  
      - name: Build frontend  
        working-directory: ./executrainsim  
        run: |  
          npm ci  
          npm run build  
      - name: Upload frontend artifact  
        uses: actions/upload-artifact@v4  
        with:  
          name: frontend  
          path: executrainsim/build  
  
  build_backend:  
    runs-on: ubuntu-latest  
    steps:  
      - uses: actions/checkout@v4  
      - name: Set up Node.js  
        uses: actions/setup-node@v3  
        with:  
          node-version: '18.x'  
          cache: 'npm'  
      - name: Build backend  
        working-directory: ./execuTrainServer  
        run: npm ci  
      - name: Upload backend artifact  
        uses: actions/upload-artifact@v4  
        with:  
          name: backend  
          path: execuTrainServer  
  
  deploy:  
    runs-on: ubuntu-latest  
    needs: [build_frontend, build_backend]  
    environment:  
      name: 'Production'  
    steps:  
      - name: Download frontend artifact  
        uses: actions/download-artifact@v4  
        with:  
          name: frontend  
          path: deploy/executrainsim  
      - name: Download backend artifact  
        uses: actions/download-artifact@v4  
        with:  
          name: backend  
          path: deploy/execuTrainServer  
      - name: Login to Azure  
        uses: azure/login@v2  
        with:  
          creds: ${{ secrets.AZURE_CREDENTIALS }}  
      - name: Deploy to Azure Web App  
        id: deploy-to-webapp  
        uses: azure/webapps-deploy@v3  
        with:  
          app-name: 'ExecuTrainSim'  
          slot-name: 'production'  
          package: deploy  
      - name: Verify deployment  
        run: |  
          for i in {1..3}; do  
            if curl -f -s -I ${{ steps.deploy-to-webapp.outputs.webapp-url }}/health; then  
              echo "Deployment verified successfully"  
              exit 0  
            fi  
            echo "Attempt $i failed, retrying..."  
            sleep 10  
          done  
          echo "Deployment verification failed after 3 attempts"  
          exit 1  