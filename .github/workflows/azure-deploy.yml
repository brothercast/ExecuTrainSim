name: Build and deploy Node.js app to Azure Web App - ExecuTrainSim

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: 'ExecuTrainSimGroup'
  NODE_VERSION: '20.x'

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Frontend Dependencies
        working-directory: ./executrainsim
        run: npm ci
      - name: Build frontend
        working-directory: ./executrainsim
        run: npm run build
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: executrainsim/build

  build_backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Backend Dependencies
        working-directory: ./execuTrainServer
        run: npm ci
      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: execuTrainServer/node_modules

  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build_frontend
    environment:
      name: 'Production'
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: deploy/executrainsim
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy frontend to Azure Web App
        id: deploy-frontend-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ExecuTrainSim-Frontend'
          slot-name: 'production'
          package: deploy/executrainsim
      - name: Verify frontend deployment
        run: |
          for i in {1..3}; do
            if curl -f -s -I ${{ steps.deploy-frontend-webapp.outputs.webapp-url }}/health; then
              echo "Frontend deployment verified successfully"
              exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done
          echo "Frontend deployment verification failed after 3 attempts"
          exit 1

  deploy_backend:
    runs-on: ubuntu-latest
    needs: build_backend
    environment:
      name: 'Production'
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: deploy/execuTrainServer
      - name: Copy server file
        run: cp execuTrainServer/server.js deploy/execuTrainServer
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy backend to Azure Web App
        id: deploy-backend-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'ExecuTrainSim-Backend'
          slot-name: 'production'
          package: deploy/execuTrainServer
          app-settings: |
            AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
            AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}
            AZURE_DEPLOYMENT_NAME=${{ secrets.AZURE_DEPLOYMENT_NAME }}
            AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}
            AZURE_ASSISTANT_API_VERSION=${{ secrets.AZURE_ASSISTANT_API_VERSION }}
            AZURE_DALLE_API_VERSION=${{ secrets.AZURE_DALLE_API_VERSION }}
      - name: Verify backend deployment
        run: |
          for i in {1..3}; do
            if curl -f -s -I ${{ steps.deploy-backend-webapp.outputs.webapp-url }}/api/generate; then
              echo "Backend deployment verified successfully"
              exit 0
            fi
            echo "Attempt $i failed, retrying..."
            sleep 10
          done
          echo "Backend deployment verification failed after 3 attempts"
          exit 1
